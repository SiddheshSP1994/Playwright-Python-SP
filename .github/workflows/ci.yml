name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  tests:
    name: Tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    env:
        PIP_DISABLE_PIP_VERSION_CHECK: "1"
        PYTHONUNBUFFERED: "1"
        ENFORCE_NO_SLEEP: "0"
        ALLURE_RESULTS: allure-results
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            C:\Users\runneradmin\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          python -m pip install playwright
          python -m playwright install --with-deps || python -m playwright install

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
            C:\Users\runneradmin\AppData\Local\ms-playwright
          key: ${{ runner.os }}-msplaywright-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-msplaywright-

      - name: Run tests (parallel, fail-fast at 5, with Allure results)
        shell: bash
        run: |
          pytest -n auto --maxfail=5 --alluredir="${ALLURE_RESULTS}"

      - name: Upload Allure results (per OS)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-allure-results
          path: ${{ env.ALLURE_RESULTS }}
          if-no-files-found: warn

  merge-allure:
    name: Merge Allure Results
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - name: Download Allure artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Merge allure-results
        run: |
          mkdir -p merged-allure-results
          find artifacts -type d -name "allure-results" -print0 | while IFS= read -r -d '' dir; do
            cp -r "$dir"/* merged-allure-results/ || true
          done

      - name: Upload merged Allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-merged
          path: merged-allure-results
          if-no-files-found: warn
